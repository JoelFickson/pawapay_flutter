// Mocks generated by Mockito 5.4.4 from annotations
// in pawapay_flutter/test/pawapay_flutter_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:pawapay_flutter/core/models/pawapay_network_response.dart'
    as _i3;
import 'package:pawapay_flutter/core/utils/logger_service.dart' as _i7;
import 'package:pawapay_flutter/core/utils/network_handler.dart' as _i4;
import 'package:pawapay_flutter/core/utils/pawapay_base_service.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePawaPayNetworkResponse_1 extends _i1.SmartFake
    implements _i3.PawaPayNetworkResponse {
  _FakePawaPayNetworkResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkHandler extends _i1.Mock implements _i4.NetworkHandler {
  MockNetworkHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio getInstance() => (super.noSuchMethod(
        Invocation.method(
          #getInstance,
          [],
        ),
        returnValue: _FakeDio_0(
          this,
          Invocation.method(
            #getInstance,
            [],
          ),
        ),
      ) as _i2.Dio);

  @override
  _i3.PawaPayNetworkResponse handleErrors(dynamic error) => (super.noSuchMethod(
        Invocation.method(
          #handleErrors,
          [error],
        ),
        returnValue: _FakePawaPayNetworkResponse_1(
          this,
          Invocation.method(
            #handleErrors,
            [error],
          ),
        ),
      ) as _i3.PawaPayNetworkResponse);
}

/// A class which mocks [PawapayBaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPawapayBaseService extends _i1.Mock
    implements _i5.PawapayBaseService {
  MockPawapayBaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String formatPhoneNumber(String? phoneNumber) => (super.noSuchMethod(
        Invocation.method(
          #formatPhoneNumber,
          [phoneNumber],
        ),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.method(
            #formatPhoneNumber,
            [phoneNumber],
          ),
        ),
      ) as String);

  @override
  bool isPawaPayErrorResponse(dynamic response) => (super.noSuchMethod(
        Invocation.method(
          #isPawaPayErrorResponse,
          [response],
        ),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [LoggerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoggerService extends _i1.Mock implements _i7.LoggerService {
  MockLoggerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void info(String? message) => super.noSuchMethod(
        Invocation.method(
          #info,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void warning(String? message) => super.noSuchMethod(
        Invocation.method(
          #warning,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void severe(String? message) => super.noSuchMethod(
        Invocation.method(
          #severe,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void fine(String? message) => super.noSuchMethod(
        Invocation.method(
          #fine,
          [message],
        ),
        returnValueForMissingStub: null,
      );
}
